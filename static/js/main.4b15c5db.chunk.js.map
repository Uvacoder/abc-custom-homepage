{"version":3,"sources":["components/time/time-component.jsx","components/fetch weather/weather-fetch.jsx","components/card/card-component.jsx","data/card1.js","data/card2.js","App.js","reportWebVitals.js","index.js"],"names":["Time","props","state","time","Date","this","setState","setInterval","currentTime","className","toLocaleTimeString","Component","Forecast","weather","response","icon","main","temp","fetch","process","REACT_APP_API_KEY","json","cod","console","log","src","alt","kel","toFixed","Card","title","list","map","li","cards","href","target","card2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSA2BeA,G,8DAvBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAAIC,MAHK,E,0DAQjBC,KAAKC,SAAS,CACZH,KAAM,IAAIC,S,0CAGO,IAAD,OAClBG,aAAY,kBAAM,EAAKC,gBAAe,O,+BAItC,OACE,qBAAKC,UAAU,QAAf,SAAwBJ,KAAKH,MAAMC,KAAKO,mBAAmB,e,GAnB9CC,c,uBCwDJC,G,wDAvDb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXW,QAAS,CACPC,SAAU,EACVD,QAAS,CACP,CACEE,KAAM,QAGVC,KAAM,CACJC,KAAM,UAXK,E,2MAmBQC,MAAM,oEAAD,OAC0CC,mJAAYC,oB,cAD5EN,E,gBAGaA,EAASO,O,OACX,OADXA,E,QACGC,KACPjB,KAAKC,SAAS,CAAEO,QAASQ,IAG3BhB,KAAKC,SAAS,CAAEQ,SAAU,I,kDAE1BS,QAAQC,IAAI,SAAZ,M,+IAUF,OAAoC,IAAhCnB,KAAKH,MAAMW,QAAQC,SACd,wBAIP,sBAAKL,UAAU,WAAf,UACE,qBACEgB,IAAG,4CAAuCpB,KAAKH,MAAMW,QAAQA,QAAQ,GAAGE,KAArE,WACHW,IAAI,KAHR,+BAVuBC,EAekBtB,KAAKH,MAAMW,QAAQG,KAAKC,MAdnDU,EAAM,QACLC,QAAQ,IAQvB,gBAVF,IAAyBD,M,GAnCNhB,cCYRkB,G,MAbF,SAAC5B,GACZ,OACE,qBAAIQ,UAAU,OAAd,UACE,oBAAIA,UAAU,QAAd,SAAuBR,EAAM6B,QAC5B7B,EAAM8B,KAAKC,KAAI,SAACC,GAAD,OACd,oBAAaxB,UAAU,OAAvB,SACGwB,GADMA,WCPJC,EAAQ,CACnB,mBAAGC,KAAK,mCAAmCC,OAAO,GAAlD,wBAIA,mBAAGD,KAAK,0BAA0BC,OAAO,GAAzC,qBAGA,mBAAGD,KAAK,6BAA6BC,OAAO,GAA5C,4BAIA,mBAAGD,KAAK,yBAAyBC,OAAO,GAAxC,oBAIA,mBAAGD,KAAK,yBAAyBC,OAAO,GAAxC,oBAIA,mBAAGD,KAAK,uBAAuBC,OAAO,GAAtC,oBCpBWC,EAAQ,CACnB,mBAAGF,KAAK,4CAAR,+BACA,mBAAGA,KAAK,oCAAR,uBACA,mBAAGA,KAAK,kCAAR,qBACA,mBAAGA,KAAK,oCAAR,wBCyBaG,E,kDApBb,aAAe,IAAD,8BACZ,gBACKpC,MAAQ,GAFD,E,qDAKZ,OACE,sBAAKO,UAAU,MAAf,UACE,6BACE,cAAC,EAAD,MAEF,cAAC,EAAD,IACA,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAAMqB,MAAM,iCAAuBC,KAAMG,IACzC,cAAC,EAAD,CAAMJ,MAAM,SAASC,KAAMM,c,GAdnB1B,aCIH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b15c5db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./time-component.scss\";\n\nclass Time extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date(),\n    };\n  }\n\n  currentTime() {\n    this.setState({\n      time: new Date(),\n    });\n  }\n  componentDidMount() {\n    setInterval(() => this.currentTime(), 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">{this.state.time.toLocaleTimeString(\"en-GB\")}</div>\n    );\n  }\n}\n\nexport default Time;\n","import React, { Component } from \"react\";\nimport \"./weather-fetch.scss\";\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: {\n        response: 1,\n        weather: [\n          {\n            icon: \"04n\",\n          },\n        ],\n        main: {\n          temp: 285.66,\n        },\n      },\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=istanbul&appid=${process.env.REACT_APP_API_KEY}`\n      );\n      const json = await response.json();\n      if (json.cod !== 401) {\n        this.setState({ weather: json });\n      }\n\n      this.setState({ response: 1 });\n    } catch (err) {\n      console.log(\"Error:\", err);\n    }\n  }\n\n  render() {\n    function kelvinToCelsius(kel) {\n      let celsius = kel - 273.15;\n      return celsius.toFixed(2);\n    }\n\n    if (this.state.weather.response === 1) {\n      return <div />;\n    }\n\n    return (\n      <div className=\"forecast\">\n        <img\n          src={`https://openweathermap.org/img/wn/${this.state.weather.weather[0].icon}@2x.png`}\n          alt=\"\"\n        />\n        İstanbul Hava Durumu: {kelvinToCelsius(this.state.weather.main.temp)}\n        °С\n      </div>\n    );\n  }\n}\nexport default Forecast;\n","import \"./card-style.scss\";\n\nconst Card = (props) => {\n  return (\n    <ul className=\"card\">\n      <h3 className=\"Title\">{props.title}</h3>\n      {props.list.map((li) => (\n        <li key={li} className=\"text\">\n          {li}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Card;\n","export const cards = [\n  <a href=\"https://www.protonmail.com/login\" target=\"\">\n    Protonmail\n  </a>,\n\n  <a href=\"https://www.youtube.com\" target=\"\">\n    Youtube\n  </a>,\n  <a href=\"https://studio.youtube.com\" target=\"\">\n    Youtube Studio\n  </a>,\n\n  <a href=\"https://www.github.com\" target=\"\">\n    Github\n  </a>,\n\n  <a href=\"https://www.odysee.com\" target=\"\">\n    Odysee\n  </a>,\n\n  <a href=\"https:/www.udemy.com\" target=\"\">\n    Udemy\n  </a>,\n];\n","export const card2 = [\n  <a href=\"https://www.reddit.com/r/dataisbeautiful/\">r/DataIsBeautiful</a>,\n  <a href=\"https://www.reddit.com/r/firefox/\">r/Firefox</a>,\n  <a href=\"https://www.reddit.com/r/linux/\">r/Linux</a>,\n  <a href=\"https://www.reddit.com/r/privacy/\">r/Privacy</a>,\n];\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Time from \"./components/time/time-component\";\nimport Forecast from \"./components/fetch weather/weather-fetch\";\nimport Card from \"./components/card/card-component\";\nimport { cards } from \"./data/card1\";\nimport { card2 } from \"./data/card2\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          <Time />\n        </h1>\n        <Forecast />\n        <div className=\"Cards\">\n          <Card title=\"Sık Girdiğim Siteler\" list={cards} />\n          <Card title=\"Reddit\" list={card2} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}